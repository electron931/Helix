<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <mvc:annotation-driven />

    <context:component-scan base-package="com.satanssoft.helix" />

    <!-- Used to serve static resources like css, images and javascript files-->
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <mvc:resources mapping="/favicon.ico" location="/favicon.ico" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
        in the /WEB-INF/views directory -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- Tiles configuration -->

    <bean id="tilesConfigurer"
          class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles/tiles-definitions.xml</value>
            </list>
        </property>
    </bean>


    <!-- Hibernate configuration -->

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
                destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url"
                        value="jdbc:mysql://localhost:3306/helix?characterEncoding=cp1251" />
        <property name="username" value="root" />
        <property name="password" value="" />
    </bean>

    <!-- Hibernate SessionFactory Bean definition -->
    <bean id="hibernate4AnnotatedSessionFactory"
                class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan"
                  value="com.satanssoft.helix.hibernate.model" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <bean id="categoryDAO" class="com.satanssoft.helix.hibernate.dao.CategoryDAOImpl">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    <bean id="categoryService" class="com.satanssoft.helix.service.impl.CategoryServiceImpl">
        <property name="categoryDAO" ref="categoryDAO" />
    </bean>

    <bean id="postDAO" class="com.satanssoft.helix.hibernate.dao.PostDAOImpl">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    <bean id="postService" class="com.satanssoft.helix.service.impl.PostServiceImpl">
        <property name="postDAO" ref="postDAO" />
    </bean>

    <bean id="userDAO" class="com.satanssoft.helix.hibernate.dao.UserDAOImpl">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    <bean id="userService" class="com.satanssoft.helix.service.impl.UserServiceImpl">
        <property name="userDAO" ref="userDAO" />
    </bean>

    <bean id="tagDAO" class="com.satanssoft.helix.hibernate.dao.TagDAOImpl">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    <bean id="tagService" class="com.satanssoft.helix.service.impl.TagServiceImpl">
        <property name="tagDAO" ref="tagDAO" />
    </bean>

    <bean id="commentDAO" class="com.satanssoft.helix.hibernate.dao.CommentDAOImpl">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    <bean id="commentService" class="com.satanssoft.helix.service.impl.CommentServiceImpl">
        <property name="commentDAO" ref="commentDAO" />
    </bean>


    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>

</beans>